@page "/account/login"
@using BlazorTemplate.Models.Authentication
@using Blazor.Infrastructure.JWT

@attribute [AllowAnonymous]

<MudForm Model="@_formModel" OnValidSubmit="SubmitAsync" @ref="@_form" @bind-IsValid="@_success" ValidationDelay="0" Validation="@(LoginValidator.ValidateValue)">
    <MudText Typo="Typo.h4" GutterBottom="true">Sign In</MudText>
    <MudText>
        Don't have an account? <MudLink Href="/register">Sign Up</MudLink>
    </MudText>

    <MudTextField @bind-Value="_formModel.UserName" For="@(() => _formModel.UserName)"
                  Variant="Variant.Outlined"
                  Label="Username"
                  Required="true"
                  OnlyValidateIfDirty="true"
                  Immediate="true"
                  Class="my-6">
    </MudTextField>
    <MudTextField @bind-Value="_formModel.Password" For="@(() => _formModel.Password)"
                  Variant="Variant.Outlined"
                  InputType="@_passwordInput"
                  Label="Password"
                  Required="true">
    </MudTextField>

    <MudLink Href="/account/forgot-password">Forgot password?</MudLink>

    <div class="d-flex justify-space-between align-center">
    </div>

    <MudButton Variant="Variant.Filled"
               Color="Color.Primary"
               Size="Size.Large"
               Disabled="@_loading"
               ButtonType="ButtonType.Button"
               OnClick="@(OnSubmitAsync)"
               Class="mt-8"
               FullWidth="true">

        @if (_loading)
        {
            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
            <MudText Class="ms-2"> Loading</MudText>
        }
        else
        {
            <MudText>Sign In</MudText>
        }

    </MudButton>
</MudForm>



@code {
    [Inject]
    private CustomAuthenticationStateProviders _authProvider { get; set; } = null!;

    [Inject]
    private LoginFormModelValidator LoginValidator { get; set; } = null!;


    private InputType _passwordInput = InputType.Password;

    private MudForm? _form;

    private LoginFormModel _formModel = new();

    private bool _success;

    private bool _loading;



    public async Task OnSubmitAsync()
    {
        try
        {
            _loading = true;

            await _form!.Validate();

            if (_form!.IsValid == false)
                return;

            Result result = await LoginUserAsync();

            if (result.IsSuccess)
                HandleLoginSuccess();
            else
                HandleLoginError(result);
        }
        finally
        {
            _loading = false;
        }
    }


    private async Task<Result> LoginUserAsync()
    {
        return await _authProvider.LoginAsync(_formModel.UserName!, _formModel.Password!);
    }


    private void HandleLoginSuccess()
    {
        NavigationManager.NavigateTo("/");
    }


    private void HandleLoginError(Result result)
    {
        Snackbar.Add(result.Errors.First().Message, MudBlazor.Severity.Error);
    }
}
